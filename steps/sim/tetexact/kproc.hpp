////////////////////////////////////////////////////////////////////////////////
// STEPS - STochastic Engine for Pathway Simulation
// Copyright (C) 2005-2007 Stefan Wils. All rights reserved.
// 
// $Id$
////////////////////////////////////////////////////////////////////////////////

#ifndef STEPS_SIM_TETEXACT_KPROC_HPP
#define STEPS_SIM_TETEXACT_KPROC_HPP 1

// Autotools definitions.
#ifdef HAVE_CONFIG_H
#include <steps/config.h>
#endif

// Standard library & STL headers.
#include <cassert>
#include <set>
#include <vector>

// STEPS headers.
#include <steps/common.h>

////////////////////////////////////////////////////////////////////////////////

class KProc
{

public:

    ////////////////////////////////////////////////////////////////////////
    // OBJECT CONSTRUCTION & DESTRUCTION
    ////////////////////////////////////////////////////////////////////////

    KProc(void);

    virtual ~KProc(void);

    virtual void resolveDeps(void) = 0;

    ////////////////////////////////////////////////////////////////////////
    // SCHEDULE INDEX

    uint schedIDX(void) const
    {
        return pScheduleIDX;
    }

    void setSchedIDX(ScheduleIDX idx)
    {
        pScheduleIDX = idx;
    }

    ////////////////////////////////////////////////////////////////////////
    // KINETIC RATE
    
    virtual double computeRate(void) = 0;
    
    ////////////////////////////////////////////////////////////////////////
    // RULE APPLICATION
    
    virtual ScheduleIDXVector const & apply(SimEnv const & simenv) = 0;

private:

	////////////////////////////////////////////////////////////////////////
	
    SchedIDX          			pScheduleIDX;

};

////////////////////////////////////////////////////////////////////////////////

#endif
// STEPS_SIM_TETEXACT_KPROC_HPP

// END
