# -*- coding: utf-8 -*-
# =====================================================================================================================
# These bindings were automatically generated by cyWrap. Please do dot modify.
# Additional functionality shall be implemented in sub-classes.
#
__copyright__ = "Copyright 2016 EPFL BBP-project"
# =====================================================================================================================
from cython.operator cimport dereference as deref
cimport std
from libcpp cimport bool
from libcpp.memory cimport shared_ptr
cimport steps_solver
cimport steps_rng
cimport steps_wm
cimport steps_model
from steps_common cimport *


# ======================================================================================================================
cdef extern from "wmdirect/wmdirect.hpp" namespace "steps::wmdirect":
# ----------------------------------------------------------------------------------------------------------------------
    # ctypedef uint SchedIDX
    # ctypedef std.set[uint] SchedIDXSet
    # ctypedef std.set[uint].iterator SchedIDXSetI
    # ctypedef std.set[uint].const_iterator SchedIDXSetCI
    # ctypedef std.vector[uint] SchedIDXVec
    # ctypedef std.vector[uint].iterator SchedIDXVecI
    # ctypedef std.vector[uint].const_iterator SchedIDXVecCI

    ###### Cybinding for Wmdirect ######
    cdef cppclass Wmdirect:
        Wmdirect(steps_model.Model*, steps_wm.Geom*, shared_ptr[steps_rng.RNG]) except +
        void checkpoint(std.string) except +
        void restore(std.string) except +
        std.string getSolverName() except +
        std.string getSolverDesc() except +
        std.string getSolverAuthors() except +
        std.string getSolverEmail() except +
        void reset() except +
        void run(double) except +
        void advance(double) except +
        void step() except +
        double getTime() except +
        double getA0() except +
        uint getNSteps() except +
        void setTime(double) except +
        void setNSteps(uint) except +
        double getCompVol(std.string) except +
        void setCompVol(std.string, double) except +
        double getCompSpecCount(std.string, std.string) except +
        void setCompSpecCount(std.string, std.string, double) except +
        double getCompSpecAmount(std.string, std.string) except +
        void setCompSpecAmount(std.string, std.string, double) except +
        double getCompSpecConc(std.string, std.string) except +
        void setCompSpecConc(std.string, std.string, double) except +
        bool getCompSpecClamped(std.string, std.string) except +
        void setCompSpecClamped(std.string, std.string, bool) except +
        double getCompReacK(std.string, std.string) except +
        void setCompReacK(std.string, std.string, double) except +
        bool getCompReacActive(std.string, std.string) except +
        void setCompReacActive(std.string, std.string, bool) except +
        double getCompReacC(std.string, std.string) except +
        double getCompReacH(std.string, std.string) except +
        double getCompReacA(std.string, std.string) except +
        unsigned long long getCompReacExtent(std.string, std.string) except +
        void resetCompReacExtent(std.string, std.string) except +
        double getPatchArea(std.string) except +
        void setPatchArea(std.string, double) except +
        double getPatchSpecCount(std.string, std.string) except +
        void setPatchSpecCount(std.string, std.string, double) except +
        double getPatchSpecAmount(std.string, std.string) except +
        void setPatchSpecAmount(std.string, std.string, double) except +
        bool getPatchSpecClamped(std.string, std.string) except +
        void setPatchSpecClamped(std.string, std.string, bool) except +
        double getPatchSReacK(std.string, std.string) except +
        void setPatchSReacK(std.string, std.string, double) except +
        bool getPatchSReacActive(std.string, std.string) except +
        void setPatchSReacActive(std.string, std.string, bool) except +
        double getPatchSReacC(std.string, std.string) except +
        double getPatchSReacH(std.string, std.string) except +
        double getPatchSReacA(std.string, std.string) except +
        unsigned long long getPatchSReacExtent(std.string, std.string) except +
        void resetPatchSReacExtent(std.string, std.string) except +

